{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dat Boi\\\\react-apps\\\\movielist-react\\\\src\\\\components\\\\AddMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport movieApi from '../api/movieApi';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddMovie = () => {\n  _s();\n\n  const [movieName, setmovieName] = useState(\"\");\n  const [director, setDirector] = useState(\"\");\n  const [actor, setActor] = useState(\"\");\n  const navigate = useNavigate(); // To store id from URL\n\n  const {\n    id\n  } = useParams();\n\n  const saveOrUpdateMovie = e => {\n    e.preventDefault();\n    const movie = {\n      movieName,\n      director,\n      actor\n    };\n\n    if (id) {\n      movieApi.updateMovie(id, movie).then(response => {\n        navigate('/movies', {\n          replace: true\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      movieApi.createMovie(movie).then(response => {\n        console.log(response.data); //navigatge to list movies page after button is clicked\n\n        navigate('/movies', {\n          replace: true\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }; // updating movie based on movie ID\n\n\n  useEffect(() => {\n    movieApi.getMovieById(id).then(response => {\n      setmovieName(response.data.movieName);\n      setDirector(response.data.director);\n      setActor(response.data.actor);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const title = () => {\n    if (id) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Update Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Add New Movie To List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Movie Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Movie Name\",\n            name: \"movieName\",\n            className: \"form-control\",\n            value: movieName,\n            onChange: e => setmovieName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Director: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Director\",\n            name: \"director\",\n            className: \"form-control\",\n            value: director,\n            onChange: e => setDirector(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Actor: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Actor\",\n            name: \"actor\",\n            className: \"form-control\",\n            value: actor,\n            onChange: e => setActor(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: e => saveOrUpdateMovie(e),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddMovie, \"qfAsv3nN5ujLbrnt88zCmRrIsK4=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = AddMovie;\nexport default AddMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMovie\");","map":{"version":3,"sources":["C:/Users/Dat Boi/react-apps/movielist-react/src/components/AddMovie.js"],"names":["React","useState","useEffect","movieApi","useNavigate","useParams","AddMovie","movieName","setmovieName","director","setDirector","actor","setActor","navigate","id","saveOrUpdateMovie","e","preventDefault","movie","updateMovie","then","response","replace","catch","error","console","log","createMovie","data","getMovieById","title","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAAQC,WAAR,EAAqBC,SAArB,QAAqC,kBAArC;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMY,QAAQ,GAAGT,WAAW,EAA5B,CAJqB,CAKrB;;AACA,QAAM;AAACU,IAAAA;AAAD,MAAOT,SAAS,EAAtB;;AAEA,QAAMU,iBAAiB,GAAIC,CAAD,IAAO;AAE/BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,KAAK,GAAG;AAACX,MAAAA,SAAD;AAAYE,MAAAA,QAAZ;AAAsBE,MAAAA;AAAtB,KAAd;;AAEA,QAAGG,EAAH,EAAM;AACFX,MAAAA,QAAQ,CAACgB,WAAT,CAAqBL,EAArB,EAAyBI,KAAzB,EAAgCE,IAAhC,CAAsCC,QAAD,IAAc;AAC/CR,QAAAA,QAAQ,CAAC,SAAD,EAAY;AAAES,UAAAA,OAAO,EAAE;AAAX,SAAZ,CAAR;AACH,OAFD,EAEGC,KAFH,CAESC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAJD;AAMH,KAPD,MAOM;AACFrB,MAAAA,QAAQ,CAACwB,WAAT,CAAqBT,KAArB,EAA4BE,IAA5B,CAAkCC,QAAD,IAAc;AAC3CI,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACO,IAArB,EAD2C,CAG3C;;AACAf,QAAAA,QAAQ,CAAC,SAAD,EAAY;AAAES,UAAAA,OAAO,EAAE;AAAX,SAAZ,CAAR;AACH,OALD,EAKGC,KALH,CAKSC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAPD;AAQD;AACF,GAvBH,CARqB,CAiCrB;;;AACAtB,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,QAAQ,CAAC0B,YAAT,CAAsBf,EAAtB,EAA0BM,IAA1B,CAAgCC,QAAD,IAAc;AACzCb,MAAAA,YAAY,CAACa,QAAQ,CAACO,IAAT,CAAcrB,SAAf,CAAZ;AACAG,MAAAA,WAAW,CAACW,QAAQ,CAACO,IAAT,CAAcnB,QAAf,CAAX;AACAG,MAAAA,QAAQ,CAACS,QAAQ,CAACO,IAAT,CAAcjB,KAAf,CAAR;AACH,KAJD,EAIGY,KAJH,CAISC,KAAK,IAAG;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAND;AAOD,GARQ,EAQP,EARO,CAAT;;AAUA,QAAMM,KAAK,GAAG,MAAM;AAEjB,QAAGhB,EAAH,EAAO;AACH,0BAAO;AAAI,QAAA,SAAS,EAAG,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEM;AACH,0BAAO;AAAI,QAAA,SAAS,EAAG,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACF;AACH,GAPD;;AAQE,sBACI;AAAA,4BACA;AAAA,gBAAKgB,KAAK;AAAV;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA,6BACI;AAAA,gCACI;AAAK,UAAA,SAAS,EAAG,YAAjB;AAAA,kCACI;AAAO,YAAA,SAAS,EAAG,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAG,MADX;AAEI,YAAA,WAAW,EAAG,kBAFlB;AAGI,YAAA,IAAI,EAAG,WAHX;AAII,YAAA,SAAS,EAAC,cAJd;AAKI,YAAA,KAAK,EAAIvB,SALb;AAMI,YAAA,QAAQ,EAAKS,CAAD,IAAOR,YAAY,CAACQ,CAAC,CAACe,MAAF,CAASC,KAAV;AANnC;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAYI;AAAO,YAAA,SAAS,EAAG,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ,eAaI;AACI,YAAA,IAAI,EAAG,MADX;AAEI,YAAA,WAAW,EAAG,gBAFlB;AAGI,YAAA,IAAI,EAAG,UAHX;AAII,YAAA,SAAS,EAAC,cAJd;AAKI,YAAA,KAAK,EAAIvB,QALb;AAMI,YAAA,QAAQ,EAAKO,CAAD,IAAON,WAAW,CAACM,CAAC,CAACe,MAAF,CAASC,KAAV;AANlC;AAAA;AAAA;AAAA;AAAA,kBAbJ,eAuBI;AAAO,YAAA,SAAS,EAAG,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBJ,eAwBI;AACI,YAAA,IAAI,EAAG,MADX;AAEI,YAAA,WAAW,EAAG,aAFlB;AAGI,YAAA,IAAI,EAAG,OAHX;AAII,YAAA,SAAS,EAAC,cAJd;AAKI,YAAA,KAAK,EAAIrB,KALb;AAMI,YAAA,QAAQ,EAAKK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACe,MAAF,CAASC,KAAV;AAN/B;AAAA;AAAA;AAAA;AAAA,kBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAkCU;AAAA;AAAA;AAAA;AAAA,gBAlCV,eAmCI;AAAQ,UAAA,SAAS,EAAG,iBAApB;AAAsC,UAAA,OAAO,EAAGhB,CAAD,IAAOD,iBAAiB,CAACC,CAAD,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8CH,CAlGD;;GAAMV,Q;UAIaF,W,EAEJC,S;;;KANTC,Q;AAoGN,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport movieApi from '../api/movieApi'\r\nimport {useNavigate, useParams} from 'react-router-dom'\r\n\r\n\r\nconst AddMovie = () => {\r\n  const [movieName, setmovieName] = useState(\"\")\r\n  const [director, setDirector] = useState(\"\")\r\n  const [actor, setActor] = useState(\"\")\r\n  const navigate = useNavigate();\r\n  // To store id from URL\r\n  const {id} = useParams();\r\n  \r\n  const saveOrUpdateMovie = (e) => {\r\n   \r\n    e.preventDefault();\r\n\r\n    const movie = {movieName, director, actor};\r\n\r\n    if(id){\r\n        movieApi.updateMovie(id, movie).then((response) => {\r\n            navigate('/movies', { replace: true })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n\r\n    } else{\r\n        movieApi.createMovie(movie).then((response) => {\r\n            console.log(response.data)\r\n            \r\n            //navigatge to list movies page after button is clicked\r\n            navigate('/movies', { replace: true })\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n      }\r\n    }\r\n\r\n  // updating movie based on movie ID\r\n  useEffect(() => {    \r\n    movieApi.getMovieById(id).then((response) => {\r\n        setmovieName(response.data.movieName)\r\n        setDirector(response.data.director)\r\n        setActor(response.data.actor)\r\n    }).catch(error =>{\r\n        console.log(error)\r\n    }) \r\n  },[])\r\n  \r\n  const title = () => {\r\n\r\n     if(id) {\r\n         return <h2 className = \"text-center\">Update Movie</h2>\r\n     } else{\r\n        return <h2 className = \"text-center\">Add New Movie To List</h2>\r\n     }\r\n  }\r\n    return (\r\n        <div>\r\n        <h1>{title()}</h1>\r\n        <div className =\"card-body\">\r\n            <form>\r\n                <div className = \"form-group\">\r\n                    <label className = \"form-label\">Movie Name: </label>\r\n                    <input\r\n                        type = \"text\"\r\n                        placeholder = \"Enter Movie Name\"\r\n                        name = \"movieName\"\r\n                        className=\"form-control\"\r\n                        value = {movieName}\r\n                        onChange = {(e) => setmovieName(e.target.value)}\r\n                    >\r\n                    </input>\r\n\r\n                    <label className = \"form-label\">Director: </label>\r\n                    <input\r\n                        type = \"text\"\r\n                        placeholder = \"Enter Director\"\r\n                        name = \"director\"\r\n                        className=\"form-control\"\r\n                        value = {director}\r\n                        onChange = {(e) => setDirector(e.target.value)}\r\n                    >\r\n                    </input>\r\n\r\n                    <label className = \"form-label\">Actor: </label>\r\n                    <input\r\n                        type = \"text\"\r\n                        placeholder = \"Enter Actor\"\r\n                        name = \"actor\"\r\n                        className=\"form-control\"\r\n                        value = {actor}\r\n                        onChange = {(e) => setActor(e.target.value)}\r\n                    >\r\n                    </input>\r\n                </div><br></br>\r\n                <button className = \"btn btn-success\" onClick={(e) => saveOrUpdateMovie(e)}>Add</button>\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n   \r\n  )\r\n}\r\n\r\nexport default AddMovie"]},"metadata":{},"sourceType":"module"}