{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dat Boi\\\\Desktop\\\\movieList\\\\movielist-react\\\\src\\\\components\\\\SearchMovies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport tmdbApi from '../api/tmdbApi';\nimport Movies from './Movies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchMovies = () => {\n  _s();\n\n  const [tmdbMovies, setTmdbMovies] = useState([]);\n  const [searchValue, setSearchValue] = useState([]); // get list of movies from TMDB API and pass to movies STATE\n\n  useEffect(() => {\n    SearchMovie('Batman');\n  }, []);\n\n  const SearchMovie = movieName => {\n    tmdbApi.searchMovie(movieName).then(response => {\n      setTmdbMovies(response.data.results);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    SearchMovie(searchValue);\n  };\n\n  const handleOnChange = e => {\n    setSearchValue(e.target.value);\n  };\n\n  const addToList = e => {\n    e.preventDefault(); //const movie = {e.value, e.vote_average, overview, ourRating, comments};\n\n    console.log(e);\n    /* movieApi.createMovie(movie).then((response) => {\r\n      navigatge to list movies page after button is clicked\r\n      navigate('/movies', { replace: true })\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleOnSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"search\",\n          type: \"text\",\n          placeholder: \"Search...\",\n          value: searchValue,\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-container\",\n      children: tmdbMovies.length > 0 && tmdbMovies.map(movie => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: e => addToList(e),\n        children: \"Add To List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Movies, { ...movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchMovies, \"INl81Q9EKtcFgT1TgA3Th6IJh8s=\");\n\n_c = SearchMovies;\nexport default SearchMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovies\");","map":{"version":3,"sources":["C:/Users/Dat Boi/Desktop/movieList/movielist-react/src/components/SearchMovies.js"],"names":["React","useEffect","useState","tmdbApi","Movies","SearchMovies","tmdbMovies","setTmdbMovies","searchValue","setSearchValue","SearchMovie","movieName","searchMovie","then","response","data","results","catch","error","console","log","handleOnSubmit","e","preventDefault","handleOnChange","target","value","addToList","length","map","movie","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAGlC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C,CAJkC,CAMlC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW,CAAC,QAAD,CAAX;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAIC,SAAD,IAAe;AAC/BR,IAAAA,OAAO,CAACS,WAAR,CAAoBD,SAApB,EAA+BE,IAA/B,CAAqCC,QAAD,IAAa;AAC7CP,MAAAA,aAAa,CAACO,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAb;AACH,KAFD,EAEGC,KAFH,CAESC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAJD;AAKH,GAND;;AAQA,QAAMG,cAAc,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAb,IAAAA,WAAW,CAACF,WAAD,CAAX;AAEH,GAJD;;AAMA,QAAMgB,cAAc,GAAIF,CAAD,IAAO;AAC1Bb,IAAAA,cAAc,CAACa,CAAC,CAACG,MAAF,CAASC,KAAV,CAAd;AAEH,GAHD;;AAKA,QAAMC,SAAS,GAAIL,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACC,cAAF,GADqB,CAEpB;;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACD;AACJ;AACA;AACA;AACA;AACA;AACG,GAVH;;AAYI,sBACI;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAED,cAAhB;AAAA,6BACA;AAAA,+BACY;AAAO,UAAA,SAAS,EAAC,QAAjB;AAA0B,UAAA,IAAI,EAAC,MAA/B;AAAsC,UAAA,WAAW,EAAC,WAAlD;AACI,UAAA,KAAK,EAAEb,WADX;AAEI,UAAA,QAAQ,EAAEgB;AAFd;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYW;AAAK,MAAA,SAAS,EAAE,iBAAhB;AAAA,gBAEKlB,UAAU,CAACsB,MAAX,GAAoB,CAApB,IACAtB,UAAU,CAACuB,GAAX,CAAgBC,KAAD,iBACf;AAAQ,QAAA,SAAS,EAAG,iBAApB;AAAsC,QAAA,OAAO,EAAGR,CAAD,IAAOK,SAAS,CAACL,CAAD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,MAAD,OAA2BQ;AAA3B,SAAaA,KAAK,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA,cAFA;AAHL;AAAA;AAAA;AAAA;AAAA,YAZX;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CAtEM;;GAAM1B,Y;;KAAAA,Y;AAwEb,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport tmdbApi from '../api/tmdbApi'\r\nimport Movies from './Movies'\r\n\r\nexport const SearchMovies = () => {\r\n  \r\n  \r\nconst [tmdbMovies, setTmdbMovies] = useState([])\r\nconst [searchValue, setSearchValue] = useState([])\r\n \r\n// get list of movies from TMDB API and pass to movies STATE\r\nuseEffect(() => { \r\n    SearchMovie('Batman')\r\n}, [])\r\n \r\nconst SearchMovie = (movieName) => {\r\n    tmdbApi.searchMovie(movieName).then((response) =>{\r\n        setTmdbMovies(response.data.results)\r\n    }).catch(error => {\r\n        console.log(error)\r\n    })\r\n} \r\n\r\nconst handleOnSubmit = (e) => {\r\n    e.preventDefault()\r\n    SearchMovie(searchValue)\r\n\r\n}\r\n\r\nconst handleOnChange = (e) => {\r\n    setSearchValue(e.target.value)\r\n\r\n}\r\n\r\nconst addToList = (e) => {\r\n    e.preventDefault();\r\n     //const movie = {e.value, e.vote_average, overview, ourRating, comments};\r\n     console.log(e);\r\n    /* movieApi.createMovie(movie).then((response) => {\r\n      navigatge to list movies page after button is clicked\r\n      navigate('/movies', { replace: true })\r\n  }).catch(error => {\r\n      console.log(error)\r\n  })*/\r\n  } \r\n  \r\n    return (\r\n        <div>\r\n            <form onSubmit={handleOnSubmit}>\r\n            <header>\r\n                        <input className=\"search\" type=\"text\" placeholder=\"Search...\"\r\n                            value={searchValue}\r\n                            onChange={handleOnChange}\r\n                        >\r\n                        </input>\r\n                    </header>\r\n            </form>\r\n                    \r\n                   \r\n                   <div className =\"movie-container\">\r\n                    {\r\n                        tmdbMovies.length > 0 && \r\n                        tmdbMovies.map((movie) => \r\n                        <button className = \"btn btn-success\" onClick={(e) => addToList(e)}>Add To List</button>,\r\n                        <Movies key={movie.id} {...movie}  \r\n                        />\r\n                        \r\n                        )      \r\n                        \r\n                    }\r\n           \r\n           </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default SearchMovies\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}