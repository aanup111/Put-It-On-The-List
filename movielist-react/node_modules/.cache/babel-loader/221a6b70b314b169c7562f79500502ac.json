{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dat Boi\\\\Desktop\\\\movieList\\\\movielist-react\\\\src\\\\components\\\\SearchMovies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport tmdbApi from '../api/tmdbApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\nexport const SearchMovies = () => {\n  _s();\n\n  const [tmdbMovies, setTmdbMovies] = useState([]); // get list of movies from TMDB API and pass to movies STATE\n\n  useEffect(() => {\n    SearchMovie('Batman');\n  }, []);\n\n  const SearchMovie = movieName => {\n    tmdbApi.searchMovie(movieName).then(response => {\n      setTmdbMovies(response.data.results);\n      console.log(response.data.results);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TMDB movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Movie Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"TMDB Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Release Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tmdbMovies.length > 0 && tmdbMovies.map(movie => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: movie.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: IMG_API + movie.poster_path,\n              alt: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: movie.vote_average\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: movie.release_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 26\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 1\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"SearchMovies\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchMovies, \"UQSYZPrpr/WjDAdLTdksYGmJt00=\");\n\n_c = SearchMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovies\");","map":{"version":3,"sources":["C:/Users/Dat Boi/Desktop/movieList/movielist-react/src/components/SearchMovies.js"],"names":["React","useEffect","useState","tmdbApi","IMG_API","SearchMovies","tmdbMovies","setTmdbMovies","SearchMovie","movieName","searchMovie","then","response","data","results","console","log","catch","error","length","map","movie","title","overview","poster_path","vote_average","release_date","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,MAAMC,OAAO,GAAG,kCAAhB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAGlC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C,CAHkC,CAKlC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,WAAW,CAAC,QAAD,CAAX;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAIC,SAAD,IAAe;AAC/BN,IAAAA,OAAO,CAACO,WAAR,CAAoBD,SAApB,EAA+BE,IAA/B,CAAqCC,QAAD,IAAa;AAC7CL,MAAAA,aAAa,CAACK,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAAT,CAAcC,OAA1B;AACH,KAHD,EAGGG,KAHH,CAGSC,KAAK,IAAI;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KALD;AAMH,GAPD;;AASA;AAAA;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEC;AAAO,MAAA,SAAS,EAAC,oCAAjB;AAAA,8BACO;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADP,eAQO;AAAA,kBAEQZ,UAAU,CAACa,MAAX,GAAoB,CAApB,IAAyBb,UAAU,CAACc,GAAX,CACrBC,KAAK,iBACL;AAAA,kCACK;AAAA,sBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,kBADL,eAEK;AAAA,sBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,kBAFL,eAGK;AAAA,mCAAK;AAAK,cAAA,GAAG,EAAInB,OAAO,GAAGiB,KAAK,CAACG,WAA5B;AAAyC,cAAA,GAAG,EAAGH,KAAK,CAACC;AAArD;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,kBAHL,eAIK;AAAA,sBAAKD,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,kBAJL,eAKK;AAAA,sBAAKJ,KAAK,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,kBALL;AAAA,WAAUL,KAAK,CAACM,EAAhB;AAAA;AAAA;AAAA;AAAA,gBAFqB;AAFjC;AAAA;AAAA;AAAA;AAAA,cARP;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgCI,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAGH,CAtDM;;GAAMtB,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport tmdbApi from '../api/tmdbApi'\r\n\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\"\r\n\r\nexport const SearchMovies = () => {\r\n  \r\n  \r\nconst [tmdbMovies, setTmdbMovies] = useState([])\r\n \r\n// get list of movies from TMDB API and pass to movies STATE\r\nuseEffect(() => { \r\n    SearchMovie('Batman')\r\n}, [])\r\n \r\nconst SearchMovie = (movieName) => {\r\n    tmdbApi.searchMovie(movieName).then((response) =>{\r\n        setTmdbMovies(response.data.results)\r\n        console.log(response.data.results)\r\n    }).catch(error => {\r\n        console.log(error)\r\n    })\r\n} \r\n  \r\n<div>\r\n<h1>TMDB movies</h1>\r\n <table className='table table-bordered table-striped'>\r\n        <thead>\r\n            <th>Movie Name</th>\r\n            <th>Overview</th>\r\n            <th>Image</th> \r\n            <th>TMDB Rating</th> \r\n            <th>Release Date</th> \r\n        </thead>\r\n        <tbody>\r\n            {\r\n                tmdbMovies.length > 0 && tmdbMovies.map(\r\n                    movie =>\r\n                    <tr key= {movie.id}>\r\n                         <td>{movie.title}</td>\r\n                         <td>{movie.overview}</td>\r\n                         <td>{<img src = {IMG_API + movie.poster_path} alt ={movie.title}></img>}</td>\r\n                         <td>{movie.vote_average}</td>\r\n                         <td>{movie.release_date}</td>\r\n                    </tr>\r\n                   \r\n                )\r\n            }\r\n        </tbody>\r\n    </table> \r\n</div> \r\n  \r\n  \r\n  \r\n  \r\n  \r\n    return (\r\n    <div>SearchMovies</div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}