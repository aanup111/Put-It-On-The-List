{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dat Boi\\\\Desktop\\\\movieList\\\\movielist-react\\\\src\\\\components\\\\SearchMovies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport tmdbApi from '../api/tmdbApi';\nimport Movies from './Movies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\nexport const SearchMovies = () => {\n  _s();\n\n  const [tmdbMovies, setTmdbMovies] = useState([]); // get list of movies from TMDB API and pass to movies STATE\n\n  useEffect(() => {\n    SearchMovie('Batman');\n  }, []);\n\n  const SearchMovie = movieName => {\n    tmdbApi.searchMovie(movieName).then(response => {\n      setTmdbMovies(response.data.results);\n      console.log(response.data.results);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search\",\n        type: \"text\",\n        placeholder: \"Search...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-container\",\n      children: tmdbMovies.length > 0 && tmdbMovies.map(movie => /*#__PURE__*/_jsxDEV(Movies, { ...movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 51\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchMovies, \"UQSYZPrpr/WjDAdLTdksYGmJt00=\");\n\n_c = SearchMovies;\nexport default SearchMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovies\");","map":{"version":3,"sources":["C:/Users/Dat Boi/Desktop/movieList/movielist-react/src/components/SearchMovies.js"],"names":["React","useEffect","useState","tmdbApi","Movies","IMG_API","SearchMovies","tmdbMovies","setTmdbMovies","SearchMovie","movieName","searchMovie","then","response","data","results","console","log","catch","error","length","map","movie","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,OAAO,GAAG,kCAAhB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAGlC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C,CAHkC,CAKlC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,WAAW,CAAC,QAAD,CAAX;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAIC,SAAD,IAAe;AAC/BP,IAAAA,OAAO,CAACQ,WAAR,CAAoBD,SAApB,EAA+BE,IAA/B,CAAqCC,QAAD,IAAa;AAC7CL,MAAAA,aAAa,CAACK,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAAT,CAAcC,OAA1B;AACH,KAHD,EAGGG,KAHH,CAGSC,KAAK,IAAI;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KALD;AAMH,GAPD;;AASI,sBACI;AAAA,4BACY;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,IAAI,EAAC,MAAhC;AAAuC,QAAA,WAAW,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADZ,eAMW;AAAK,MAAA,SAAS,EAAE,iBAAhB;AAAA,gBAEKZ,UAAU,CAACa,MAAX,GAAoB,CAApB,IACAb,UAAU,CAACc,GAAX,CAAgBC,KAAD,iBAAW,QAAC,MAAD,OAA2BA;AAA3B,SAAaA,KAAK,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA,cAA1B;AAHL;AAAA;AAAA;AAAA;AAAA,YANX;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CApCM;;GAAMjB,Y;;KAAAA,Y;AAsCb,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport tmdbApi from '../api/tmdbApi'\r\nimport Movies from './Movies'\r\n\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\"\r\n\r\nexport const SearchMovies = () => {\r\n  \r\n  \r\nconst [tmdbMovies, setTmdbMovies] = useState([])\r\n \r\n// get list of movies from TMDB API and pass to movies STATE\r\nuseEffect(() => { \r\n    SearchMovie('Batman')\r\n}, [])\r\n \r\nconst SearchMovie = (movieName) => {\r\n    tmdbApi.searchMovie(movieName).then((response) =>{\r\n        setTmdbMovies(response.data.results)\r\n        console.log(response.data.results)\r\n    }).catch(error => {\r\n        console.log(error)\r\n    })\r\n} \r\n  \r\n    return (\r\n        <div>\r\n                    <header>\r\n                        <input  className=\"search\" type=\"text\" placeholder=\"Search...\">\r\n                        </input>\r\n                    </header>\r\n                   \r\n                   <div className =\"movie-container\">\r\n                    {\r\n                        tmdbMovies.length > 0 && \r\n                        tmdbMovies.map((movie) => <Movies key={movie.id} {...movie} /> )      \r\n                        \r\n                    }\r\n           \r\n           </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default SearchMovies\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}